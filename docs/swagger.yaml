definitions:
  request.ArticleDetail:
    properties:
      articleCoverKey:
        description: 文章封面key
        type: string
      articleCoverUrl:
        description: 文章封面
        type: string
      articleName:
        description: 博客名称
        type: string
      category:
        description: 文章类型
        type: string
      content:
        description: 文章内容
        type: string
      description:
        description: 文章简要
        type: string
      tags:
        description: 文章标签
        items:
          type: string
        type: array
    type: object
  request.CategoryContent:
    properties:
      categoryName:
        type: string
    type: object
  request.Login:
    properties:
      captcha:
        description: 验证码
        type: string
      captchaId:
        description: 验证码ID
        type: string
      password:
        description: 密码
        type: string
      username:
        description: 用户名
        type: string
    type: object
  request.Register:
    properties:
      enable:
        type: integer
      nickName:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  request.TagContent:
    properties:
      tagName:
        type: string
    type: object
  request.UpdateCategoryContent:
    properties:
      categoryName:
        type: string
      id:
        type: string
    type: object
  request.UpdateTag:
    properties:
      id:
        description: 主键ID
        type: string
      tagName:
        type: string
    type: object
info:
  contact: {}
paths:
  /article:
    get:
      description: 根据id获取文章详情
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{"code": "200", "msg": "", "data": ""}'
          schema:
            type: string
      summary: 根据id获取文章详情
      tags:
      - 文章管理
  /article/add:
    post:
      consumes:
      - application/json
      description: 新增文章
      parameters:
      - description: 博客信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ArticleDetail'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": "200", "msg": "", "data": ""}'
          schema:
            type: string
      summary: 新增文章
      tags:
      - 文章管理
  /article/comment/list:
    get:
      description: 获取评论列表
      parameters:
      - description: 当前页
        in: query
        name: page
        required: true
        type: integer
      - description: 每页请求数量
        in: query
        name: pageSize
        required: true
        type: integer
      - description: 搜索内容
        in: query
        name: keyWord
        type: string
      responses:
        "200":
          description: '{"code": "200", "msg": "", "data": ""}'
          schema:
            type: string
      summary: 获取评论列表
      tags:
      - 文章评论管理
  /article/delete:
    delete:
      description: 删除文章
      parameters:
      - description: 当前页
        in: query
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": "200", "msg": "", "data": ""}'
          schema:
            type: string
      summary: 删除文章
      tags:
      - 文章管理
  /article/favor/cancel:
    post:
      description: 文章取消收藏
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{"code": "200", "msg": "", "data": ""}'
          schema:
            type: string
      summary: 文章取消收藏
      tags:
      - 文章收藏管理
  /article/favor/is:
    get:
      description: 文章是否已经收藏
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{"code": "200", "msg": "", "data": ""}'
          schema:
            type: string
      summary: 文章是否已经收藏
      tags:
      - 文章收藏管理
  /article/favor/save:
    post:
      description: 文章收藏
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{"code": "200", "msg": "", "data": ""}'
          schema:
            type: string
      summary: 文章收藏
      tags:
      - 文章收藏管理
  /article/liked/cancel:
    post:
      description: 文章取消点赞
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{"code": "200", "msg": "", "data": ""}'
          schema:
            type: string
      summary: 文章取消点赞
      tags:
      - 文章点赞管理
  /article/liked/is:
    get:
      description: 文章是否已经点赞
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{"code": "200", "msg": "", "data": ""}'
          schema:
            type: string
      summary: 文章是否已经点赞
      tags:
      - 文章点赞管理
  /article/liked/save:
    post:
      description: 文章点赞
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{"code": "200", "msg": "", "data": ""}'
          schema:
            type: string
      summary: 文章点赞
      tags:
      - 文章点赞管理
  /article/list:
    get:
      description: 获取文章列表
      parameters:
      - description: 当前页
        in: query
        name: page
        required: true
        type: integer
      - description: 每页请求数量
        in: query
        name: pageSize
        required: true
        type: integer
      - description: 搜索内容
        in: query
        name: keyWord
        type: string
      responses:
        "200":
          description: '{"code": "200", "msg": "", "data": ""}'
          schema:
            type: string
      summary: 获取文章列表
      tags:
      - 文章管理
  /article/views/record:
    post:
      description: 记录文章阅读数量(请求文章详情时会自动调用，无需再次手动调用)
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{"code": "200", "msg": "", "data": ""}'
          schema:
            type: string
      summary: 记录文章阅读数量(请求文章详情时会自动调用，无需再次手动调用)
      tags:
      - 文章阅读量管理
  /base/category:
    get:
      description: 根据id获取分类详情
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{"code": "200", "msg": "", "data": ""}'
          schema:
            type: string
      summary: 根据id获取分类详情
      tags:
      - Base
  /base/category/list:
    get:
      description: 获取分类列表
      parameters:
      - description: 当前页
        in: query
        name: page
        required: true
        type: integer
      - description: 每页请求数量
        in: query
        name: pageSize
        required: true
        type: integer
      - description: 搜索内容
        in: query
        name: keyWord
        type: string
      responses:
        "200":
          description: '{"code": "200", "msg": "", "data": ""}'
          schema:
            type: string
      summary: 获取分类列表
      tags:
      - Base
  /base/login/token:
    post:
      consumes:
      - application/json
      description: 用户登录
      parameters:
      - description: 用户名
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Login'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": "200", "msg": "", "data": ""}'
          schema:
            type: string
      summary: 用户登录
      tags:
      - Base
  /base/register:
    post:
      consumes:
      - application/json
      description: 用户注册
      parameters:
      - description: 用户注册信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Register'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": "200", "msg": "", "data": ""}'
          schema:
            type: string
      summary: 用户注册
      tags:
      - Base
  /base/tag:
    get:
      description: 根据id获取标签信息
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{"code": "200", "msg": "", "data": ""}'
          schema:
            type: string
      summary: 根据id获取标签信息
      tags:
      - Base
  /base/tag/list:
    get:
      description: 获取标签列表
      responses:
        "200":
          description: '{"code": "200", "msg": "", "data": ""}'
          schema:
            type: string
      summary: 获取标签列表
      tags:
      - Base
  /category/add:
    post:
      consumes:
      - application/json
      description: 添加分类
      parameters:
      - description: 分类信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.CategoryContent'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": "200", "msg": "", "data": ""}'
          schema:
            type: string
      summary: 添加分类
      tags:
      - 分类管理
  /category/delete:
    delete:
      description: 删除分类
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{"code": "200", "msg": "", "data": ""}'
          schema:
            type: string
      summary: 删除分类
      tags:
      - 分类管理
  /category/update:
    put:
      consumes:
      - application/json
      description: 更新分类
      parameters:
      - description: 分类信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.UpdateCategoryContent'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": "200", "msg": "", "data": ""}'
          schema:
            type: string
      summary: 更新分类
      tags:
      - 分类管理
  /tag/add:
    post:
      consumes:
      - application/json
      description: 添加标签
      parameters:
      - description: 标签信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.TagContent'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": "200", "msg": "", "data": ""}'
          schema:
            type: string
      summary: 添加标签
      tags:
      - 标签管理
  /tag/delete:
    delete:
      description: 删除标签
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{"code": "200", "msg": "", "data": ""}'
          schema:
            type: string
      summary: 删除标签
      tags:
      - 标签管理
  /tag/update:
    put:
      consumes:
      - application/json
      description: 更新标签
      parameters:
      - description: 标签信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.UpdateTag'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": "200", "msg": "", "data": ""}'
          schema:
            type: string
      summary: 更新标签
      tags:
      - 标签管理
  /user/list:
    get:
      description: 获取用户列表
      parameters:
      - description: 当前页
        in: query
        name: page
        required: true
        type: integer
      - description: 每页请求数量
        in: query
        name: pageSize
        required: true
        type: integer
      - description: 搜索内容
        in: query
        name: keyWord
        type: string
      responses:
        "200":
          description: '{"code": "200", "msg": "", "data": ""}'
          schema:
            type: string
      summary: 获取用户列表
      tags:
      - 用户管理
  /user/me:
    get:
      description: 获取用户信息
      responses:
        "200":
          description: '{"code": "200", "msg": "", "data": ""}'
          schema:
            type: string
      summary: 获取用户信息
      tags:
      - 用户管理
swagger: "2.0"
